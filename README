A local VM development environment for Drupalistas based on newest Acquia platform.


CONTENTS OF THIS FILE
---------------------

  * Introduction
  * Specs
  * Who Can Use Undine?
  * Installation
  * Design Decisions
  * Future Direction
  * Features added by X-Team
  * Sponsorship


INTRODUCTION
------------

Undine is a cross-platform turnkey Drupal development VM based on the Acquia
Cloud. The goal of the Undine project is to quickly provide a powerful,
consistent environment to both new and experienced Drupalistas.


WHO CAN USE UNDINE?
-------------------

Any developer or themer can start using Undine in a matter of minutes. However,
those whose server configurations resemble the Acquia Cloud will reap the full
benefits of using Undine.

Undine also offers a means for others to explore using Vagrant and Puppet with
minimal investment.


INSTALLATION
------------

Please review the accompanying `INSTALL.txt` for detailed instructions on the
installation and configuration of Undine.


DESIGN DECISIONS
----------------

Ariadne currently exists as an alternative to Undine. However, its roots in
Chef may make it less preferable for those who would prefer to manage their
configurations in Puppet.

Furthermore, external dependencies are kept to a minimum: Vagrant, VirtualBox,
and (optionally) NFS. This both allows for easier distribution on Drupal.org and
helps ensure extensibility. Undine also hides any dependencies within the VM
from the end user. At its most basic, the end user should only have to "vagrant
up" to get started.

Undine's Puppet modules avoid the use of cross-module dependencies. Although
modules often depend on each other, they should never worry about internals. As
a result, these points of intersection (such as conf.d files for php.ini) are
exposed as defined types of a given class. Other modules may then add to the
configuration without being aware of implementation details.

To allow for portable configuration, Undine manages site and environment
configuration in Puppet modules. The sites and env directories further
differentiate between the environment and the Drupal sites. Note that the main
manifest (manifests/site.pp) file must still include these files as normal.

Undine uses the SSH agent forwarding feature of Vagrant by default. In doing so,
SSH credentials on the host machine are securely forwarded through the guest VM
when required. When using the provisioner, this also means that developers must
add an entry to known_hosts for each hostname. Undine offers the defined type
undine_ssh::known_host for this. Although it is possible to disable this check,
it does help prevent man-in-the-middle attacks. Therefore, Undine requires users
to whitelist known hosts rather than circumvent the feature altogether.

Puppet modules like puppetlabs/stdlib aren't used due to licensing restrictions.
Many are still under the Apache 2.0 licence, which is not GPLv2+ compatible.


FUTURE DIRECTION
----------------

The goal of the Undine project to simplifying the process of setting up a local
development environment. While doing so, the guiding principle is to make easy
things easy and hard things possible. To wit, additional database backends and
support for advanced caching may be added in the future.


SPONSORSHIP
-----------

Originally developed by Stevens Institute of Technology. Additional
development and enhancement is sponsored by [X-Team](http://x-team.com), global development team of
100+ carefully chosen specialists.
